{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\nimport {\n  extend,\n  find,\n  any\n}\nfrom 'lodash';\nimport Bluebird from 'bluebird';\n\nclass Context {\n  constructor(properties) {\n    extend(this, properties);\n  }\n  getClaims() {\n    /* returns claims against anon, user, and bucket role */\n    var claimList = [];\n    if (!this.application) {\n      return claimList;\n    }\n    if (!this.environment) {\n      this.environment = 'live';\n    }\n    claimList = claimList.concat(this.application.anonymousPermissions[this.environment]);\n    if (!this.user || !this.roles) {\n      return claimList;\n    }\n    var userRole = find(this.roles, (role) => {\n      return role._id === this.user.roles.mainRole && role.environment === this.environment;\n    });\n    if (userRole) {\n      claimList = claimList.concat(userRole.claims);\n    }\n    if (!this.bucket) {\n      return claimList;\n    }\n    var userBucketRole = find(this.user.roles.bucketRoles, (innerBucketRole) => {\n      return innerBucketRole.bucket === this.bucket._id;\n    });\n    if (userBucketRole) {\n      var bucketRole = find(this.roles, (role) => {\n        return role._id === userBucketRole.role && role.environment === this.environment;\n      });\n      if (bucketRole) {\n        claimList = claimList.concat(bucketRole.claims);\n      }\n    }\n    return claimList;\n  }\n  hasClaim(claim) {\n    return Promise.resolve().then(() => {\n      if (!claim || !claim.key) {\n        return false;\n      }\n      return any(this.getClaims(), (key) => {\n        return key === claim.key;\n      });\n    });\n  }\n}\nvar _context;\nContext.set = function (context, callback) {\n  _context = context;\n  return Bluebird.resolve(_context)\n    .nodeify(callback);\n};\nContext.current = function () {\n  return _context;\n};\n\nContext.get = function (callback) {\n  return Bluebird.try(function () {\n    if (!_context) {\n      _context = new Context({});\n    }\n    return _context;\n  }).nodeify(callback);\n};\n\nContext.claims = require('./claims');\n\nmodule.exports = Context;\n"],"sourceRoot":"/source/"}